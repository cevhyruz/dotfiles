[
// window navigation
{ "key": "ctrl+h",
  "command": "vim.remap",
  "when": "vim.mode == 'Normal'",
  "args": { "after": ["<C-w>", "h"], }
},
{ "key": "ctrl+j",
  "command": "vim.remap",
  "when": "vim.mode == 'Normal'",
  "args": { "after": ["<C-w>", "j"], } 
},
{ "key": "ctrl+k",
  "command": "vim.remap",
  "when": "vim.mode == 'Normal'",
  "args": { "after": ["<C-w>", "k"], }
},
{ "key": "ctrl+l",
  "command": "vim.remap",
  "when": "vim.mode == 'Normal'",
  "args": { "after": ["<C-w>", "l"], }
},
{ "key": "ctrl+l",
  "command": "workbench.action.focusActiveEditorGroup",
  "when": "explorerViewletFocus && !editorTextFocus"
}, 
// quick command
{ "key": ";",
  "command": "vim.remap",
  "when": "vim.mode == 'Normal'",
  "args": { "after": [":"], }
},
// toggle file explorer
{ "key": "ctrl+n",
  "command": "workbench.action.toggleSidebarVisibility",
  "when": "explorerViewletFocus || editorTextFocus && !inQuickOpen"
},
{ "key": "ctrl+n",
  "command": "workbench.view.explorer",
  "when": "editorTextFocus && !explorerViewletVisible && !inQuickOpen"
},
// editor scroll down
{ "key": "ctrl+e",
  "command": "extension.multiCommand.execute",
  "args": { "sequence": [ "scrollLineDown", "scrollLineDown", "scrollLineDown", ] },
  "when": "editorTextFocus && !explorerViewletFocus"
},
// editor scroll Up
{ "key": "ctrl+y",
  "command": "extension.multiCommand.execute",
  "args": { "sequence": [ "scrollLineUp", "scrollLineUp", "scrollLineUp", ] },
  "when": "editorTextFocus && !explorerViewletFocus"
},
// accept current selected in quickOpen.
{ "key": "ctrl+m",
  "command":  "workbench.action.acceptSelectedQuickOpenItem",
  "when": "inQuickOpen"
},
// open selected file from quickOpen in split.
{ "key": "ctrl+l",
  "command": "workbench.action.alternativeAcceptSelectedQuickOpenItem",
  "when": "inQuickOpen"
},
// Snippet placeholder navigation.
{ "key": "ctrl+j",
  "command": "jumpToNextSnippetPlaceholder",
  "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
},
{ "key": "ctrl+k",
  "command": "jumpToPrevSnippetPlaceholder",
  "when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
},
// quickOpen navigation.
{ "key": "ctrl+n",
  "command": "workbench.action.quickOpenSelectNext",
  "when": "inQuickOpen"
},
{ "key": "ctrl+j",
  "command": "workbench.action.quickOpenSelectNext",
  "when": "inQuickOpen"
},
{ "key": "tab",
  "command": "workbench.action.quickOpenSelectNext",
  "when": "inQuickOpen"
},
{ "key": "ctrl+p",
  "command": "workbench.action.quickOpenSelectPrevious",
  "when": "inQuickOpen"
},
{ "key": "ctrl+k",
  "command": "workbench.action.quickOpenSelectPrevious",
  "when": "inQuickOpen"
},
// File Explorer
{ "key": "r",
  "command": "renameFile",
  "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
},
{ "key": "d",
  "command": "deleteFile",
  "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
}, 
{ "key": "a",
  "command": "explorer.newFile",
  "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
}, 
{ "key": "v",
  "command": "list.toggleSelection",
  "when": "explorerViewletFocus"
}, 
// toggle minimap. (only works if workbench.minimap.enabled is true)
{ "key": "ctrl+8",
  "command": "editor.action.toggleMinimap"
},
// create and edit new untitled file.
{ "key": "ctrl+w n",
  "command": "workbenchj.action.files.newUntitledFile",
  "when": "editorTextFokkus && !filesExplorerFocus"
}, 
// move current/selected lines up.
{ "key": "alt+k",
  "command": "editor.action.moveLinesUpAction",
  "when": "editorTextFocus && !editorReadonly"
},
// move current/selected lines down.
{ "key": "alt+j",
  "command": "editor.action.moveLinesDownAction",
  "when": "editorTextFocus && !editorReadonly"
},
// accept suggestion
{ "key": "ctrl+i",
  "command": "acceptSelectedSuggestion",
  "when": "suggestWidgetVisible && textInputFocus"
},
{ "key": "ctrl+m",
  "command": "acceptSelectedSuggestion",
  "when": "suggestWidgetVisible && textInputFocus"
},
// suggestion widget navigation. 
{ "key": "ctrl+j",
  "command": "selectNextSuggestion",
  "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
{ "key": "ctrl+k",
  "command": "selectPrevSuggestion",
  "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
{ "key": "ctrl+n",
  "command": "selectNextSuggestion",
  "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
// hide notifications
{ "key": "shift+escape",
  "command": "notifications.hideToasts",
  "when": "notificationToastsVisible || editorTextFocus || globalMessageVisible"
},
]
