#!/usr/bin/env bash

# ------------------------------------------------------------------
# ftpane - tmux panes and X11 window focus switcher
# ------------------------------------------------------------------
# heavily-modified version of @george-b's `ftpane` script.
# https://github.com/junegunn/fzf/wiki/examples

# TODO: Make it toggable! ( avoid running two instance )
# Always show active pane first.
# Add support for ansi colors codes.

# TODO: Don't list drawer-type panes.

ftpane() {
  local _format panes prev_panes target target_window target_pane
  local _window_title

  if _inside_tmux; then
    _format='#W:#P - (#{history_size}/#{history_limit}) #{pane_current_path} #{pane_current_command} #{pane_active}'
    panes=$(tmux list-panes -s -F "$_format")
    prev_panes=$(tmux list-pane -F "$_format")

    target=$(echo "$panes" | grep -v "$prev_panes" | column -t | fzf ) || return

    target_window="$(echo "$target" | awk 'BEGIN{ FS=":|-" } { print $1 }')"
    target_pane="$(echo "$target" | awk 'BEGIN{ FS=":|-" } { print $2 }' | cut -c 1)"
    tmux select-window -t "${target_window}" &&
    tmux select-pane -t:".${target_pane}"
  else
    # TODO: display the '$4' (client-machine-name) if inside ssh session.
    target=$(wmctrl -lp | awk '{ $1=$2=$4=""; print substr($0,3)}' | grep -v "Desktop" | fzf)
    _window_title=$(echo "${target}" | awk '{ $1=$2=$3=""; print substr($0, 4) }')

    if [ -z "${target}" ]; then
      return 1
    else
      wmctrl -a "${_window_title}"
    fi
  fi
}

# In tmux.conf bind a key to run `ftpane` in split:
# bind-key n run "tmux split-window -fvl 8 'sh ./bin/ftpane'"

ftpane
