#!/usr/bin/env bash

TEST_DIRECTORY="$(cd "$(dirname "$0")" && pwd)"
BATS_EXECUTABLE="${TEST_DIRECTORY}/_lib/bats-core/bin/bats"

git submodule init && git submodule update

if [[ -z "${DOTFILES_BASH_DIR}" ]]; then
  declare DOTFILES_BASH_DIR
  DOTFILES_BASH_DIR=$(cd "${TEST_DIRECTORY}" && dirname "$(pwd)")
  export DOTFILES_BASH_DIR
fi

if [[ -z "$1" ]]; then
  # shellcheck disable=SC2206
  TEST_DIRS=(${TEST_DIRECTORY}/{install,Bash})
else
  TEST_DIRS=("$1")
fi

# Try to run tests in parallel processes for faster execution.
if command -v parallel &>/dev/null &&
  parallel -V &>/dev/null &&
  { parallel -V 2>/dev/null | grep -q '^GNU\>'; }; then

  # should be able to run atleast on a dual-core CPU.
  declare -ir TEST_JOBS_PROC=2
  declare -i TEST_JOBS_EFFECTIVE=

  readonly TEST_JOBS_EFFECTIVE="$(
    if [[ "${TEST_JOBS:-detect}" = "detect" ]] &&
      command -v nproc &>/dev/null; then
      nproc
    else
      echo "${TEST_JOBS:-${TEST_JOBS_PROC}}"
    fi
  )"

  exec "${BATS_EXECUTABLE}" ${CI:+--tap} \
    --jobs "${TEST_JOBS_EFFECTIVE}" "${TEST_DIRS[@]}"
else
  # Run `bats` in single-threaded mode.
  exec "${BATS_EXECUTABLE}" ${CI:+--tap} "${TEST_DIRS[@]}"
fi
