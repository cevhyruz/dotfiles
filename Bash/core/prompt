#!/usr/bin/env bash
# shellcheck shell=bash
# vi:ft=sh fdm=marker ts=2 sw=2 et

# main entry function.
function _core::() {
  FIRST_PROMPT=1
  PROMPT_COMMAND='_post_command'

  trap _pre_command DEBUG
}

function _pre_command() {
  PS1="$(_::source_file "${DOT_BASH}/themes/${BASH_THEME:-default}.theme.bash")"

  if [[ -z "${AT_PROMPT+x}" ]]; then
    return
  fi
  unset AT_PROMPT

  # shellcheck disable=SC2154
  echo -ne "${dimgrey}"
}

function _post_command() {
   export exit_code=$?
  _exit_status $exit_code

  AT_PROMPT=1

  if [[ -n "${FIRST_PROMPT+x}" ]]; then
    unset FIRST_PROMPT
    return
  fi
}

function _core::_parse_SCM() {
  # TODO: make status get it's colors depending on gitconfig
  local status branch_name

  ! git rev-parse &> /dev/null && return;

  if [ "$( git rev-parse --is-inside-git-dir 2> /dev/null)" == "false" ]; then

    git update-index --really-refresh -q &> /dev/null;

    ! git diff --quiet --ignore-submodules --cached \
      && status+="+"; # staged

    ! git diff-files --quiet --ignore-submodules -- \
      && status+="!"; # modified

    [ -n "$( git ls-files --others --exclude-standard)" ] \
      && status+="?"; # untracked

    git rev-parse --verify refs/stash &> /dev/null \
      && status+="⁕";
  fi

  branch_name+="$(git symbolic-ref --quiet --short HEAD 2> /dev/null \
    || git rev-parse --short HEAD 2> /dev/null \
    || echo "unknown")"

  declare -a git_prompt=(
    "${bold}"                        # make everything bold
    "${dimgrey}"    "$1"             # open delimeter
    "${red}"        "${branch_name}" # current branch
    "${dimgrey}"    "$2"             # close delimeter
    "${yellow}"     "${status:-}"      # status symbol
    "${reset}"                       # terminate tput codes
  );

  printf "%b" "${git_prompt[@]}"
}

function _exit_code() {
  if [[ $exit_code -ne 0 ]]; then
   printf "%b" "exited ${red//1/0}${exit_code}"
  fi
}

function _exit_status() {
  if [[ $1 -ne 0 ]]; then
    PS1="${PS1//${green/#\\e/}/${red/#\\e/}}"
  else
    PS1="${PS1//${red/#\\e/}/${green/#\\e/}}"
  fi
}

_core:: && unset -f _core::
