# change default mode.
set editing-mode vi

# show cursor
set show-mode-in-prompt on
set vi-ins-mode-string "\1\e[38;5;29m\2   \1\e[38;5;216m\2\1\e[3 q\2"
set vi-cmd-mode-string "\1\e[38;5;240m\2   \1\e[38;5;216m\2\1\e[2 q\2"

# Make <Tab> autocomplete regardless of filename case.
set completion-ignore-case on

# Add trailing slash when autocompleting symlinks to directories.
set mark-symlinked-directories on

# Do not autocomplete hidden files unless pattern begins with a dot.
set match-hidden-files off

# Be more intelligent when autocompleting by also looking at the text after
# the cursor. For example, when the current line is "cd ~/src/mozil", and
# the cursor is on the "z", pressing Tab will not autocomplete it to "cd
# ~/src/mozillail", but to "cd ~/src/mozilla". (This is supported by the
# Readline used by Bash 4.)
set skip-completed-text on

# Allow UTF-8 input and output.
set input-meta on
set output-meta on
set convert-meta on

# Never ring the terminal bell.
set bell-style none



# Vi mode keybindings
$if mode=vi
  # -------------------------------------
  #  Insert Mode                        |
  # -------------------------------------
  set keymap vi-insert
    # much better <Esc> key.
    "kj": vi-movement-mode
    # cycle through all posible completion.
    TAB: menu-complete
  # -------------------------------------
  #  Command Mode                       |
  # -------------------------------------
  set keymap vi-command
    # redundant wit key.
    "k": nop

    # Autocomplete partially typed command based on history.
    "J": history-search-forward
    "K": history-search-backward

    "j": accept-line
    "gg": clear-screen
    "u": upcase-word

    # Perform shell expansion.
    TAB: shell-expand-line

    # Delete in word
    "diw": "dw"
    # Paste last command args.
    "p": yank-last-arg

    # ------------------------------------------------------------------
    # inserting surroundings.
    # ------------------------------------------------------------------
    # subshell
    "sh": "bi$(\eea)"

    # variable expansion
    "ysiw$": "bi${\eea}\e[2 q"

    # qoutes.
    "ysiw\"": "bi\"\eea\"\e[2 q"
    "ysiw\'": "bi\'\eea\'\e[2 q"

    # parenthesis.
    "ysiw(": "bi\( \eea )\e[2 q"
    "ysiw)": "bi\(\eea\)\e[2 q"

    # brackets.
    "ysiw[": "bi[ \eea ]\e[2 q"
    "ysiw]": "bi[\eea]\e[2 q"

    # curly braces.
    "ysiw{": "bi{ \eea }\e[2 q"
    "ysiw}": "bi{\eea}\e[2 q"

    # backticks.
    "ysiw`": "bi`\eea`\e[2 q"

    # ------------------------------------------------------------------
    # changing surroundings.
    # ------------------------------------------------------------------
    # to double quotes
    "cs$\"": "bbxr\"wwr\""
    "cs\'\"": "bbr\"wwr\""
    "cs(\"": "bbr\"lxwr\"hx"
    "cs)\"": "bbr\"wwr\""
    "cs[\"": "bbr\"lxwr\"hx"
    "cs]\"": "bbr\"wwr\""
    "cs{\"": "bbr\"lxwr\"hx"
    "cs}\"": "bbr\"wwr\""
    "cs`\"": "bbr\"wwr\""

    # to single quotes
    "cs$\'": "bbxr\'wwr\'"
    "cs\"\'": "bbr\'wwr\'"
    "cs(\'": "bbr\'lxwr\'hx"
    "cs)\'": "bbr\'wwr\'"
    "cs[\'": "bbr\'lxwr\'hx"
    "cs]\'": "bbr\'wwr\'"
    "cs{\'": "bbr\'lxwr\'hx"
    "cs}\'": "bbr\'wwr\'"
    "cs`\'": "bbr\'wwr\'"

    # ------------------------------------------------------------------
    # removing surroundings.
    # ------------------------------------------------------------------
    "ds$": "xbbxx"
    "ds\'": "bbxwx"
    "ds\"": "bbxwx"
    "ds(": "bbxxwhxx"
    "ds)": "bbxwx"
    "ds[": "bbxxwhxx"
    "ds]": "bbxwx"
    "ds{": "bbxxwhxx"
    "ds}": "bbxwx"
    "ds`": "bbxwx"
$endif

# vim:set ft=readline:
