#!/usr/bin/env bash

function main() {
 _enable_color_support
 _set_color_variables
 _enable_command_color

  cleanup && unset -f cleanup
}

function _enable_color_support() {
  if [[ $COLORTERM == gnome-* && $TERM == xterm ]] \
    && infocmp gnome-256color &> /dev/null; then
    export TERM="gnome-256color";
  elif infocmp xterm-256color &> /dev/null; then
    export TERM="xterm-256color";
  fi
}

function _set_color_variables() {
# http://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html
# https://unix.stackexchange.com/questions/269077/tput-setaf-color-table-how-to-determine-color-codes
# shellcheck disable=SC2034
  if [ -x /usr/bin/tput ] \
    && tput setaf 1 &> /dev/null; then
    # reset everything first
    tput sgr0;
    # attributes.
    reset="$(tput sgr0)";
    bold="$(tput bold)";
    # colors
    black="$(tput setaf 234)";
    cyan="$(tput setaf 30)";
    dimgrey="$(tput setaf 248)";
    pink="$(tput setaf 216)";
    yellow="$(tput setaf 178)";
    green="$(tput setaf 30)";
    red="$(tput setaf 203)";
    white="$(tput setaf 246)";
    shade="$(tput setaf 241)";
  fi
}

function _enable_command_color() {
  if [ -x /usr/bin/dircolors ]; then
    if test -r ~/Projects/dotfiles/bash/LS_COLORS; then
      eval "$(dircolors -b ~/Projects/dotfiles/bash/LS_COLORS)"
    fi
  fi
  declare -a ls_colors=(
    "no=0;39:"    # Global default
    "di=0;36:"    # Directory
    "ex=0;32:"    # Executable file
    "fi=0;39:"    # File
    "ec=:"        # Non-filename text
    "mi=1;31:"    # Non-existent file pointed to by a symlink
    "ln=target:"  # Symbolic link
    "ow=0;35:"    # Other writable
    "or=31;01:"   # Symbolic link pointing to a non-existent file
  )
  export LS_COLORS="$(printf %s "${ls_colors[@]}")"
}

function cleanup() {
  unset -f _enable_color_support
  unset -f _enable_command_color
  unset -f _set_color_variables
}

# time main
main && unset -f main
